{
  "paths": {
    "/recipes/dietary-guidelines": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "Comma-separated guideline IDs e.g. 1,2,3",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "gender",
            "schema": {
              "type": "string",
              "enum": ["M", "F"]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "age",
            "description": "Matches min_age ≤ age ≤ max_age",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DietaryGuideline"
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_CONTENT"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "tags": ["recipes"],
        "description": "Get dietary guidelines with optional filters."
      }
    },
    "/recipes/ingredients": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "Comma-separated ingredient IDs",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ingredient_name",
            "description": "Partial match",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ingredient"
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_CONTENT"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "tags": ["recipes"],
        "description": "Get all ingredients with optional filters"
      }
    },
    "/recipes/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "Comma-separated recipe IDs",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "recipe_name",
            "description": "ILIKE match",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "recipe_type",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "cuisine_type",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "dietary_preferences",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recipe"
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_CONTENT"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "tags": ["recipes"],
        "description": "Get recipes with optional filters."
      }
    },
    "/recipes/recipe_ingredients": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "Comma-separated recipe_ingredient IDs",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "recipe_id",
            "description": "Comma-separated recipe IDs",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ingredient_id",
            "description": "Comma-separated ingredient IDs",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecipeIngredient"
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_CONTENT"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "tags": ["recipes"],
        "description": "Get recipe ingredients with optional filters."
      }
    },
    "/meals/": {
      "post": {
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meal"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_CONTENT"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMeal"
              }
            }
          }
        },
        "tags": ["meals"],
        "description": "Create a new meal record"
      }
    },
    "/meals/child/{child_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Meal"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "tags": ["meals"],
        "description": "Get all meals for a specific child"
      },
      "parameters": [
        {
          "in": "path",
          "name": "child_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/meals/{meal_id}": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meal"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_CONTENT"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMeal"
              }
            }
          }
        },
        "tags": ["meals"],
        "description": "Update a meal by ID"
      },
      "parameters": [
        {
          "in": "path",
          "name": "meal_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ],
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "tags": ["meals"],
        "description": "Delete a meal by ID"
      }
    },
    "/meals/range/{child_id}": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Meal"
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_CONTENT"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "tags": ["meals"],
        "description": "Get all meals for a child within a time range"
      },
      "parameters": [
        {
          "in": "path",
          "name": "child_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/mood_logs/": {
      "post": {
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoodLog"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_CONTENT"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMoodLog"
              }
            }
          }
        },
        "summary": "Create a new mood log",
        "tags": ["mood_logs"],
        "description": "Create a new mood log"
      },
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MoodLog"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "summary": "Get all mood logs",
        "tags": ["mood_logs"],
        "description": "Get all mood logs with optional filters"
      }
    },
    "/mood_logs/{child_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MoodLog"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "summary": "Get a mood log by child ID",
        "tags": ["mood_logs"],
        "description": "Get a single mood log by using the child ID",
        "parameters": [
          {
            "in": "path",
            "name": "child_id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the child to fetch the mood log for"
          }
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "child_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/mood_logs/{mood_log_id}": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoodLog"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_CONTENT"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMoodLog"
              }
            }
          }
        },
        "tags": ["mood_logs"],
        "description": "Update a mood log by ID"
      },
      "parameters": [
        {
          "in": "path",
          "name": "mood_log_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ],
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "summary": "Delete a mood log",
        "tags": ["mood_logs"],
        "description": "Delete a mood log by ID"
      }
    },
    "/mood_logs/latest/{child_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoodLog"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "tags": ["mood_logs"],
        "description": "Get the latest mood log for a specific child"
      },
      "parameters": [
        {
          "in": "path",
          "name": "child_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/mood_logs/range/{child_id}": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MoodLog"
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_CONTENT"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "tags": ["mood_logs"]
      },
      "parameters": [
        {
          "in": "path",
          "name": "child_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/children/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "Comma-separated child IDs (e.g., 1,2,3)",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Child"
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_CONTENT"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "tags": ["children"],
        "description": "Get children with optional ID filter (comma-separated)."
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Child"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_CONTENT"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChild"
              }
            }
          }
        },
        "tags": ["children"],
        "description": "Create a new child"
      }
    },
    "/children/{child_id}": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Child"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_CONTENT"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChild"
              }
            }
          }
        },
        "tags": ["children"],
        "description": "Update a child by ID"
      },
      "parameters": [
        {
          "in": "path",
          "name": "child_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ],
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "tags": ["children"],
        "description": "Delete a child by ID"
      }
    }
  },
  "info": {
    "title": "Child Emotional Health API",
    "version": "v1"
  },
  "tags": [
    {
      "name": "recipes",
      "description": "Recipe Recommender API"
    },
    {
      "name": "meals",
      "description": "meals CRUD API"
    },
    {
      "name": "mood_logs",
      "description": "Mood Logs API"
    },
    {
      "name": "children",
      "description": "Children CRUD API"
    }
  ],
  "openapi": "3.0.3",
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error code"
          },
          "status": {
            "type": "string",
            "description": "Error name"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "errors": {
            "type": "object",
            "description": "Errors",
            "additionalProperties": {}
          }
        }
      },
      "PaginationMetadata": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          },
          "first_page": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "previous_page": {
            "type": "integer"
          },
          "next_page": {
            "type": "integer"
          }
        }
      },
      "DietaryGuideline": {
        "type": "object",
        "properties": {
          "gender": {
            "type": "string",
            "enum": ["M", "F"]
          },
          "age_group": {
            "type": "string"
          },
          "servings_veg_legumes_beans": {
            "type": "number",
            "minimum": 0,
            "nullable": true
          },
          "servings_fruit": {
            "type": "number",
            "minimum": 0,
            "nullable": true
          },
          "servings_grain": {
            "type": "number",
            "minimum": 0,
            "nullable": true
          },
          "servings_meat_fish_eggs_nuts_seeds": {
            "type": "number",
            "minimum": 0,
            "nullable": true
          },
          "servings_milk_yoghurt_cheese": {
            "type": "number",
            "minimum": 0,
            "nullable": true
          },
          "min_age": {
            "type": "integer",
            "minimum": 0
          },
          "max_age": {
            "type": "integer",
            "minimum": 0
          },
          "guideline_id": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "Ingredient": {
        "type": "object",
        "properties": {
          "ingredient_name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "emoji": {
            "type": "string",
            "nullable": true
          },
          "ingredient_id": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "Recipe": {
        "type": "object",
        "properties": {
          "recipe_name": {
            "type": "string"
          },
          "recipe_type": {
            "type": "string",
            "nullable": true
          },
          "cuisine_type": {
            "type": "string",
            "nullable": true
          },
          "dietary_preferences": {
            "type": "string",
            "nullable": true
          },
          "cooking_steps": {
            "type": "string",
            "nullable": true
          },
          "servings_veg_legumes_beans": {
            "type": "number",
            "minimum": 0,
            "nullable": true
          },
          "servings_fruit": {
            "type": "number",
            "minimum": 0,
            "nullable": true
          },
          "servings_grain": {
            "type": "number",
            "minimum": 0,
            "nullable": true
          },
          "servings_meat_fish_eggs_nuts_seeds": {
            "type": "number",
            "minimum": 0,
            "nullable": true
          },
          "servings_milk_yoghurt_cheese": {
            "type": "number",
            "minimum": 0,
            "nullable": true
          },
          "recipe_id": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "RecipeIngredient": {
        "type": "object",
        "properties": {
          "recipe_id": {
            "type": "integer"
          },
          "ingredient_id": {
            "type": "integer"
          },
          "grams": {
            "type": "integer",
            "minimum": 0,
            "nullable": true
          },
          "recipe_ingredient_id": {
            "type": "integer",
            "readOnly": true
          },
          "recipe_name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "ingredient_name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "CreateMeal": {
        "type": "object",
        "properties": {
          "meal_name": {
            "type": "string"
          },
          "servings_fruit": {
            "type": "number",
            "default": 0,
            "minimum": 0
          },
          "servings_grain": {
            "type": "number",
            "default": 0,
            "minimum": 0
          },
          "servings_meat_fish_eggs_nuts_seeds": {
            "type": "number",
            "default": 0,
            "minimum": 0
          },
          "servings_milk_yoghurt_cheese": {
            "type": "number",
            "default": 0,
            "minimum": 0
          },
          "servings_veg_legumes_beans": {
            "type": "number",
            "default": 0,
            "minimum": 0
          },
          "child_id": {
            "type": "integer"
          },
          "meal_type": {
            "type": "string",
            "enum": ["Breakfast", "Lunch", "Dinner", "Snack", "Dessert"]
          }
        },
        "required": ["child_id", "meal_name", "meal_type"]
      },
      "Meal": {
        "type": "object",
        "properties": {
          "meal_name": {
            "type": "string"
          },
          "servings_fruit": {
            "type": "number",
            "default": 0,
            "minimum": 0
          },
          "servings_grain": {
            "type": "number",
            "default": 0,
            "minimum": 0
          },
          "servings_meat_fish_eggs_nuts_seeds": {
            "type": "number",
            "default": 0,
            "minimum": 0
          },
          "servings_milk_yoghurt_cheese": {
            "type": "number",
            "default": 0,
            "minimum": 0
          },
          "servings_veg_legumes_beans": {
            "type": "number",
            "default": 0,
            "minimum": 0
          },
          "child_id": {
            "type": "integer"
          },
          "meal_type": {
            "type": "string",
            "enum": ["Breakfast", "Lunch", "Dinner", "Snack", "Dessert"]
          },
          "meal_id": {
            "type": "integer",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "UpdateMeal": {
        "type": "object",
        "properties": {
          "meal_name": {
            "type": "string"
          },
          "servings_fruit": {
            "type": "number",
            "default": 0,
            "minimum": 0
          },
          "servings_grain": {
            "type": "number",
            "default": 0,
            "minimum": 0
          },
          "servings_meat_fish_eggs_nuts_seeds": {
            "type": "number",
            "default": 0,
            "minimum": 0
          },
          "servings_milk_yoghurt_cheese": {
            "type": "number",
            "default": 0,
            "minimum": 0
          },
          "servings_veg_legumes_beans": {
            "type": "number",
            "default": 0,
            "minimum": 0
          },
          "child_id": {
            "type": "integer"
          },
          "meal_type": {
            "type": "string",
            "enum": ["Breakfast", "Lunch", "Dinner", "Snack", "Dessert"]
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": ["message"]
      },
      "CreateMoodLog": {
        "type": "object",
        "properties": {
          "child_id": {
            "type": "integer"
          },
          "mood": {
            "type": "string",
            "enum": ["laugh", "happy", "neutral", "sad", "angry"]
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "required": ["child_id", "mood"]
      },
      "MoodLog": {
        "type": "object",
        "properties": {
          "mood_log_id": {
            "type": "integer",
            "readOnly": true
          },
          "child_id": {
            "type": "integer"
          },
          "mood": {
            "type": "string",
            "maxLength": 50
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": ["child_id", "mood"]
      },
      "UpdateMoodLog": {
        "type": "object",
        "properties": {
          "mood": {
            "type": "string",
            "enum": ["laugh", "happy", "neutral", "sad", "angry"]
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Child": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": ["M", "F", null],
            "nullable": true
          },
          "meals_per_day": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10,
            "nullable": true
          },
          "child_id": {
            "type": "integer",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "CreateChild": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": ["M", "F"]
          },
          "meals_per_day": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10
          }
        },
        "required": ["date_of_birth", "gender", "meals_per_day", "name"]
      },
      "UpdateChild": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": ["M", "F", null],
            "nullable": true
          },
          "meals_per_day": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10,
            "nullable": true
          }
        }
      }
    },
    "responses": {
      "DEFAULT_ERROR": {
        "description": "Default error response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "UNPROCESSABLE_CONTENT": {
        "description": "Unprocessable Content",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}
